SET(APP_NAME Simulator )
SET(APP_DIR "${PROJECT_SOURCE_DIR}/${APP_NAME}")

ADD_EXECUTABLE(${APP_NAME})

GET_FILENAME_COMPONENT(PARENT_DIR ../../ ABSOLUTE)

TARGET_SOURCES(${APP_NAME} PUBLIC
  FILE_SET HEADERS
  FILES
    ${APP_DIR}/Simulator.hpp
  PRIVATE
    ${APP_DIR}/Main.cpp
    ${APP_DIR}/Simulator.cpp
)

INCLUDE(Common)

TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PUBLIC
  "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/${APP_NAME}>"
  "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
  "$<BUILD_INTERFACE:${PARENT_DIR}>"
)

set_compiler_version(
  CXX_STANDARD 20
  CXX_STANDARD_REQUIRED ON
  CXX_EXTENSIONS ON

  TARGET "${APP_NAME}"
)
TARGET_COMPILE_FEATURES(${APP_NAME} PUBLIC cxx_std_20)

#IF(APPLE)
#  set_compiler_version(
#    OBJCXX_STANDARD 20
#    OBJCXX_STANDARD_REQUIRED ON
#    OBJCXX_EXTENSIONS ON
#    TARGET "${APP_NAME}"
#  )
#  enable_language(OBJC OBJCXX)
#ENDIF()

COMMON_SET_TARGET_PROPERTIES()

target_link_libraries(${APP_NAME} PRIVATE imgui imgui-glfw imgui-opengl3)


IF(TARGET NES)
  TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE NES)
ELSE()
  FIND_PACKAGE(NES REQUIRED)
  IF(NES_FOUND)
    TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE NES::NES)
  ENDIF()
ENDIF()

TARGET_COMPILE_DEFINITIONS(NES PRIVATE ${PROJECT_COMPILE_DEFINITIONS})

IF(TARGET NES)
  TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE NES)
ELSE()
  FIND_PACKAGE(NES REQUIRED)
  IF(NES_FOUND)
    TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE NES::NES)
  ENDIF()
ENDIF()

TARGET_COMPILE_DEFINITIONS(NES PRIVATE ${PROJECT_COMPILE_DEFINITIONS})

common_create_install(NAME "${APP_NAME}" TARGETS "${APP_NAME}")
