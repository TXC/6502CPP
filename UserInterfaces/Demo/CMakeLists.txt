SET(APP_NAME Demo)
SET(APP_DIR "${PROJECT_SOURCE_DIR}/${APP_NAME}")

ADD_EXECUTABLE(${APP_NAME})

GET_FILENAME_COMPONENT(PARENT_DIR ../../ ABSOLUTE)

TARGET_SOURCES(${APP_NAME} PRIVATE
  ${APP_DIR}/Demo.cpp
)

INCLUDE(Common)

SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
  VERSION  "${${PROJECT_NAME}_VERSION}"
  LINKER_LANGUAGE  "${PROJECT_LINKER}"
)

set_compiler_version(
  CXX_STANDARD 20
  CXX_STANDARD_REQUIRED ON
  CXX_EXTENSIONS ON

  OBJCXX_STANDARD 20
  OBJCXX_STANDARD_REQUIRED ON
  OBJCXX_EXTENSIONS ON

  TARGET "${APP_NAME}"
)

COMMON_SET_TARGET_PROPERTIES()

TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PRIVATE
  "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/${APP_NAME}>"
  "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
  "$<BUILD_INTERFACE:${PARENT_DIR}>"
)

TARGET_COMPILE_DEFINITIONS("${APP_NAME}" PRIVATE ${PROJECT_COMPILE_DEFINITIONS})

IF(TARGET Processor)
  TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE Processor)
ELSE()
  FIND_PACKAGE(Processor REQUIRED)
  IF(Processor_FOUND)
    TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE Processor::Processor)
  ENDIF()
ENDIF()

TARGET_COMPILE_DEFINITIONS(Processor PRIVATE ${PROJECT_COMPILE_DEFINITIONS})

common_create_install(NAME "${APP_NAME}" TARGETS "${APP_NAME}")
