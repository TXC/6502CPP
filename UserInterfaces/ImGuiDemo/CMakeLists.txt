SET(APP_NAME ImGuiDemo)
SET(APP_DIR "${PROJECT_SOURCE_DIR}/${APP_NAME}")

INCLUDE(Common)

ADD_EXECUTABLE(${APP_NAME})

SOURCE_GROUP(${APP_NAME} FILES
  #${PROJECT_SOURCE_DIR}/ImGuiDemo.mm
  ${APP_NAME}/ImGuiDemo.mm
)

INCLUDE(Common)

SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
  VERSION  "${${PROJECT_NAME}_VERSION}"
  LINKER_LANGUAGE  "${PROJECT_LINKER}"
)

TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PRIVATE
  "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/${APP_NAME}>"
  "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
)

set_compiler_version(
  CXX_STANDARD 20
  CXX_STANDARD_REQUIRED ON
  CXX_EXTENSIONS ON

  TARGET "${APP_NAME}"
)

IF(APPLE)
  set_compiler_version(
    OBJCXX_STANDARD 20
    OBJCXX_STANDARD_REQUIRED ON
    OBJCXX_EXTENSIONS ON
    TARGET "${APP_NAME}"
  )
  enable_language(OBJC OBJCXX)

  TARGET_SOURCES(${APP_NAME}
    PRIVATE
      ${APP_DIR}/ImGuiDemo.mm
  )
ENDIF()

COMMON_SET_TARGET_PROPERTIES()

IF(TARGET imgui)
  TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE imgui::imgui)
  TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PRIVATE imgui::imgui)
ELSE()
  FIND_PACKAGE(imgui REQUIRED)
  IF(imgui_FOUND)
    TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE imgui::imgui)
    TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PRIVATE imgui::imgui)
    #TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PRIVATE ${imgui_INCLUDE_DIR})
  ENDIF()
ENDIF()


#IF(TARGET Processor)
#  TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE Processor)
#ELSE()
#  FIND_PACKAGE(Processor REQUIRED)
#  IF(Processor_FOUND)
#    TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE Processor::Processor)
#  ENDIF()
#ENDIF()
#TARGET_COMPILE_OPTIONS(Processor PRIVATE "-ferror-limit=50")
#TARGET_COMPILE_DEFINITIONS(Processor PRIVATE ${PROJECT_COMPILE_DEFINITIONS})

IF(APPLE)
  IF (DEFINED CMAKE_FIND_FRAMEWORK)
    SET (_APPLE_CMAKE_FIND_FRAMEWORK ${CMAKE_FIND_FRAMEWORK})
  ELSE()
    UNSET (_APPLE_CMAKE_FIND_FRAMEWORK)
  ENDIF()
  SET(CMAKE_FIND_FRAMEWORK ONLY)

  FIND_LIBRARY(COCOA_LIBRARY Cocoa)
  FIND_LIBRARY(IOKIT_LIBRARY IOKit)

  FIND_LIBRARY(OPENGL_LIBRARY OpenGL)
  FIND_LIBRARY(COREVIDEO_LIBRARY CoreVideo)
  FIND_LIBRARY(METAL_LIBRARY Metal)
  FIND_LIBRARY(METALKIT_LIBRARY MetalKit)
  FIND_LIBRARY(QUARTZCORE_LIBRARY QuartzCore)

  IF (DEFINED _APPLE_CMAKE_FIND_FRAMEWORK)
    SET (CMAKE_FIND_FRAMEWORK ${_APPLE_CMAKE_FIND_FRAMEWORK})
    UNSET (_APPLE_CMAKE_FIND_FRAMEWORK)
  ELSE()
    UNSET (CMAKE_FIND_FRAMEWORK)
  ENDIF()

  #TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE
  #  "-framework,Metal"
  #  "-framework,MetalKit"
  #  "-framework,CoreVideo"
  #  "-framework,QuartzCore"
  #  "-framework,OpenGL"
  #  "-framework,Cocoa"
  #  "-framework,IOKit"
  #)
ENDIF()

FIND_PACKAGE(glfw3 REQUIRED)
IF(glfw3_FOUND)
    TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE glfw)
ENDIF()  

#FIND_PACKAGE(GLFW3 )
#IF(GLFW3_FOUND)
#  TARGET_LINK_LIBRARIES(${APP_NAME} PRIVATE ${GLFW3_LIBRARY})
#  TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PRIVATE ${GLFW3_INCLUDE_DIR})
#ENDIF()

common_create_install(NAME "${APP_NAME}" TARGETS "${APP_NAME}")
