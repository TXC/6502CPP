
SET(APP_NAME Demo)

#TARGET_SOURCES(${APP_NAME}
#  PUBLIC  ${PROJECT_SOURCE_DIR}/Simulator.hpp
#)

IF (APPLE)
  ADD_EXECUTABLE(${APP_NAME} MACOSX_BUNDLE)

  TARGET_SOURCES(${APP_NAME}
    PRIVATE
            ${PROJECT_SOURCE_DIR}/Demo.mm
  )

  SET(_CMAKE_FIND_FRAMEWORK ${CMAKE_FIND_FRAMEWORK})
  SET(CMAKE_FIND_FRAMEWORK ONLY)

  FIND_LIBRARY(COCOA_LIBRARY Cocoa)
  FIND_LIBRARY(OPENGL_LIBRARY OpenGL)
  FIND_LIBRARY(IOKIT_LIBRARY IOKit)
  FIND_LIBRARY(COREVIDEO_LIBRARY CoreVideo)
  FIND_LIBRARY(METAL_LIBRARY Metal)
  FIND_LIBRARY(METALKIT_LIBRARY MetalKit)
  FIND_LIBRARY(QUARTZCORE_LIBRARY QuartzCore)

  SET(CMAKE_FIND_FRAMEWORK ${_CMAKE_FIND_FRAMEWORK})
  UNSET(_CMAKE_FIND_FRAMEWORK)
 
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
                                   OUTPUT_NAME "${APP_NAME}"
                 MACOSX_BUNDLE_EXECUTABLE_NAME "${APP_NAME}"
                     MACOSX_BUNDLE_BUNDLE_NAME "${APP_NAME}"
                                        FOLDER "${APP_NAME}"
                                    ##RESOURCE icon.icns
            MACOSX_BUNDLE_SHORT_VERSION_STRING ""
             MACOSX_BUNDLE_LONG_VERSION_STRING ""
                     ##MACOSX_BUNDLE_ICON_FILE icon.icns
                      MACOSX_BUNDLE_INFO_PLIST "${PROJECT_SOURCE_DIR}/CMake/MacOSXBundleInfo.plist.in"
  )
ELSEIF(WIN32)
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES OUTPUT_NAME "${APP_NAME}")
ELSEIF(UNIX)
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES OUTPUT_NAME "${APP_NAME}")
ENDIF()

SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
                                     VERSION  "${${PROJECT_NAME}_VERSION}"
                             LINKER_LANGUAGE  "${PROJECT_LINKER}"
)
IF(PROJECT_LINKER STREQUAL "C")
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
                                    C_STANDARD  "${PROJECT_C_STANDARD}"
                           C_STANDARD_REQUIRED  "${PROJECT_C_STANDARD_REQUIRED}"
                                  C_EXTENSIONS  "${PROJECT_C_EXTENSIONS}"
  )
ELSEIF(PROJECT_LINKER STREQUAL "CXX")
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
                                  CXX_STANDARD  "${PROJECT_CXX_STANDARD}"
                         CXX_STANDARD_REQUIRED  "${PROJECT_CXX_STANDARD_REQUIRED}"
                                CXX_EXTENSIONS  "${PROJECT_CXX_EXTENSIONS}"
  )
ELSEIF(PROJECT_LINKER STREQUAL "OBJC")
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
                                    C_STANDARD  "${PROJECT_C_STANDARD}"
                           C_STANDARD_REQUIRED  "${PROJECT_C_STANDARD_REQUIRED}"
                                  C_EXTENSIONS  "${PROJECT_C_EXTENSIONS}"
  )
ELSEIF(PROJECT_LINKER STREQUAL "OBJCXX")
  SET_TARGET_PROPERTIES(${APP_NAME} PROPERTIES
                               OBJCXX_STANDARD  "${PROJECT_CXX_STANDARD}"
                      OBJCXX_STANDARD_REQUIRED  "${PROJECT_CXX_STANDARD_REQUIRED}"
                             OBJCXX_EXTENSIONS  "${PROJECT_CXX_EXTENSIONS}"
  )
ENDIF()

#TARGET_LINK_LIBRARIES(${APP_NAME} PUBLIC imgui Processor)
TARGET_LINK_LIBRARIES(${APP_NAME} PUBLIC Processor)
#TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PUBLIC ${IMGUI_DIR} Processor)
TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PUBLIC Processor)

#FIND_PACKAGE(GLFW3 REQUIRED)
#IF(GLFW3_FOUND)
#  TARGET_INCLUDE_DIRECTORIES(${APP_NAME} PUBLIC ${GLFW3_INCLUDE_DIR})
#  TARGET_LINK_LIBRARIES(${APP_NAME} PUBLIC ${GLFW3_LIBRARY})
#ENDIF()