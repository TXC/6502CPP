CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

PROJECT(
  6502_Processor
  VERSION 1.0.0
  DESCRIPTION "6502 Processor"
  LANGUAGES CXX
)

SET(LINKER_LANGUAGE CXX)
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS ON)
SET(THREADS_PREFER_PTHREAD_FLAD ON)

SET(CMAKE_VERBOSE_MAKEFILE ${CMAKE_VERBOSE_MAKEFILE})
SET(CMAKE_RULE_MESSAGES ${CMAKE_RULE_MESSAGES})

GET_FILENAME_COMPONENT(PARENT_DIR ../ ABSOLUTE)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PARENT_DIR}/CMake)

ADD_LIBRARY(Processor SHARED)

OPTION(WITH_LOGGING "Enable logging" ${DEBUG})
OPTION(WITH_ILLEGAL "Enable illegal instructions" ON)

LIST(APPEND COVERAGE_COMPILE_FLAGS
  -ferror-limit=50
)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COVERAGE_COMPILE_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${COVERAGE_LINK_FLAGS}")

SET_TARGET_PROPERTIES(Processor PROPERTIES VERSION  "${${PROJECT_NAME}_VERSION}"
                                   LINKER_LANGUAGE  "${LINKER_LANGUAGE}"
                                CMAKE_CXX_STANDARD  "${CMAKE_CXX_STANDARD}"
                       CMAKE_CXX_STANDARD_REQUIRED  "${CMAKE_CXX_STANDARD_REQUIRED}"
                              CMAKE_CXX_EXTENSIONS  "${CMAKE_CXX_EXTENSIONS}"
                       THREADS_PREFER_PTHREAD_FLAD  "${THREADS_PREFER_PTHREAD_FLAD}"
)

IF(WITH_LOGGING)
  ADD_DEFINITIONS(-DLOGMODE)
ENDIF()

IF(WITH_ILLEGAL)
  ADD_DEFINITIONS(-DILLEGAL)
ENDIF()

TARGET_SOURCES(Processor
  PUBLIC  ${PROJECT_SOURCE_DIR}/Bus.hpp
          ${PROJECT_SOURCE_DIR}/Executioner.hpp
          ${PROJECT_SOURCE_DIR}/Log.hpp
          ${PROJECT_SOURCE_DIR}/Processor.hpp
          ${PROJECT_SOURCE_DIR}/Singleton.hpp
          ${PROJECT_SOURCE_DIR}/Types.hpp

  PRIVATE ${PROJECT_SOURCE_DIR}/Bus.cpp
          ${PROJECT_SOURCE_DIR}/Executioner.cpp
          ${PROJECT_SOURCE_DIR}/Log.cpp
          ${PROJECT_SOURCE_DIR}/Instructions.cpp
          ${PROJECT_SOURCE_DIR}/Processor.cpp
)

TARGET_INCLUDE_DIRECTORIES(Processor PUBLIC
  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
  $<INSTALL_INTERFACE:include>
)
