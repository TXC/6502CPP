CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

PROJECT(6502_Emulator VERSION 1.0.0 DESCRIPTION "6502 Emulator" LANGUAGES CXX)

# Determine if thisproject is built as a subproject (using add_subdirectory)
# or if it is the master project.
IF (NOT DEFINED MASTER_PROJECT)
  SET(MASTER_PROJECT OFF)
  IF (CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
    SET(MASTER_PROJECT ON)
    MESSAGE(STATUS "CMake version: ${CMAKE_VERSION}")
  ENDIF ()
ENDIF ()

OPTION(DEBUG "Enable debug (extensive logging)" OFF)
OPTION(DECIMAL_MODE "Enable decimal mode" ON)
OPTION(VERBOSE "Enable verbosity" OFF)
OPTION(USE_TEST "Enable Tests" OFF)
OPTION(WITH_LOGGING "Enable logging" ${DEBUG})
OPTION(WITH_ILLEGAL "Enable illegal instructions" ON)
SET(LOGFILE "Processor.log" CACHE STRING "Filename to log to")

IF(NOT CMAKE_BUILD_TYPE STREQUAL "Debug")
  SET(USE_TEST OFF)
ENDIF()

IF (VERBOSE)
  SET(CMAKE_VERBOSE_MAKEFILE ON)
  SET(CMAKE_RULE_MESSAGES OFF)
ENDIF()

SET(PROJECT_COMPILE_FLAGS)
SET(PROJECT_LINK_FLAGS)
IF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
    LIST(APPEND PROJECT_COMPILE_FLAGS "--coverage" "-g" "-O0" "-fno-inline" "-fno-inline-small-functions" "-fno-default-inline")
    LIST(APPEND PROJECT_LINK_FLAGS "--coverage")
  ENDIF()
ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
    LIST(APPEND PROJECT_COMPILE_FLAGS "--coverage")
    LIST(APPEND PROJECT_LINK_FLAGS "--coverage")
  ENDIF()
ENDIF()

LIST(APPEND CMAKE_MODULE_PATH
  ${PROJECT_SOURCE_DIR}/CMake
  ${CMAKE_BINARY_DIR}
  ${CMAKE_MODULE_PATH}
)

LIST(APPEND CMAKE_PREFIX_PATH
  ${PROJECT_SOURCE_DIR}/
  ${CMAKE_BINARY_DIR}
  ${CMAKE_MODULE_PATH}
)

IF(CMAKE_C_COMPILER)
  SET(CMAKE_C_STANDARD "11")
  SET(CMAKE_C_STANDARD_REQUIRED "ON")
  SET(CMAKE_C_EXTENSIONS "ON")
  IF(CMAKE_OBJC_COMPILER)
    SET(CMAKE_OBJC_STANDARD ${CMAKE_C_STANDARD})
    SET(CMAKE_OBJC_STANDARD_REQUIRED ${CMAKE_C_STANDARD_REQUIRED})
    SET(CMAKE_OBJC_EXTENSIONS ${CMAKE_C_EXTENSIONS})
  ENDIF()
ENDIF()

IF(CMAKE_CXX_COMPILER)
  SET(CMAKE_CXX_STANDARD "20")
  SET(CMAKE_CXX_STANDARD_REQUIRED "ON")
  SET(CMAKE_CXX_EXTENSIONS "ON")
  IF(CMAKE_OBJCXX_COMPILER)
    SET(CMAKE_OBJCXX_STANDARD ${CMAKE_CXX_STANDARD})
    SET(CMAKE_OBJCXX_STANDARD_REQUIRED ${CMAKE_CXX_STANDARD_REQUIRED})
    SET(CMAKE_OBJCXX_EXTENSIONS ${CMAKE_CXX_EXTENSIONS})
  ENDIF()
ENDIF()

IF(LINUX OR APPLE)
  LIST(APPEND CMAKE_PREFIX_PATH "/usr/local/include")
ENDIF()

IF(DEBUG)
  ADD_COMPILE_DEFINITIONS(DEBUG=1)
  LIST(APPEND PROJECT_COMPILE_FLAGS "-ferror-limit=50")
ENDIF()

IF(DECIMAL_MODE)
  ADD_COMPILE_DEFINITIONS(DECIMAL_MODE=1)
ENDIF()

IF(WITH_LOGGING)
  ADD_COMPILE_DEFINITIONS(LOGMODE=1)
ENDIF()
  
IF(
  DEFINED LOGFILE
  AND NOT LOGFILE STREQUAL ""
  AND NOT LOGFILE STREQUAL "Processor.log"
)
  ADD_COMPILE_DEFINITIONS(LOGFILE=${LOGFILE})
ENDIF()
  
IF(WITH_ILLEGAL)
  ADD_COMPILE_DEFINITIONS(ILLEGAL=1)
ENDIF()

#IF (PROJECT_CXX_STANDARD EQUAL "20")
#  ADD_COMPILE_DEFINITIONS(LIBCXX_ENABLE_INCOMPLETE_FEATURES)
#ENDIF()

ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/Processor)

IF(NOT EXISTS ${PROJECT_SOURCE_DIR}/imgui)
  INCLUDE(${CMAKE_SOURCE_DIR}/CMake/GetImgui.cmake)
ENDIF()

IF(USE_TEST)
  ENABLE_TESTING()
	ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/ProcessorTests)
ENDIF()

IF(NOT USE_TEST)
  ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/imgui)
  ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/Simulator)
ENDIF()
